openapi: 3.0.3

#  This file is part of the eliona project.
#  Copyright Â© 2022 LEICOM iTEC AG. All Rights Reserved.
#  ______ _ _
# |  ____| (_)
# | |__  | |_  ___  _ __   __ _
# |  __| | | |/ _ \| '_ \ / _` |
# | |____| | | (_) | | | | (_| |
# |______|_|_|\___/|_| |_|\__,_|
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
#  BUT NOT LIMITED  TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#  NON INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
#  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

info:
  version: 1.0.0
  title: Microsoft 365 App
  description: API to access and configure the Microsoft 365 App
externalDocs:
  description: Microsoft 365 App documentation
  url: https://doc.eliona.io/collection/eliona-apps/apps/microsoft-365
servers:
  - url: http://microsoft-365/v1

tags:
  - name: Configuration
    description: Configure the app
    externalDocs:
      url: https://github.com/eliona-smart-building-assistant/microsoft-365-app

  - name: Version
    description: API version
    externalDocs:
      url: https://github.com/eliona-smart-building-assistant/microsoft-365-app

  - name: Customization
    description: Help to customize Eliona environment
    externalDocs:
      url: https://github.com/eliona-smart-building-assistant/microsoft-365-app

  - name: Proxy
    description: Microsoft 365 proxy - implemented standalone
    externalDocs:
      url: https://github.com/eliona-smart-building-assistant/microsoft-365-app

paths:
  /configs:
    get:
      tags:
        - Configuration
      summary: Get configurations
      description: Gets information about all configurations.
      operationId: getConfigurations
      responses:
        "200":
          description: Successfully returned all configurations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Configuration"
    post:
      tags:
        - Configuration
      summary: Creates a configuration
      description: Creates a configuration.
      operationId: postConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Configuration"
      responses:
        "201":
          description: Successfully created a configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Configuration"

  /configs/{config-id}:
    get:
      tags:
        - Configuration
      summary: Get configuration
      description: Gets information about the configuration with the given id
      parameters:
        - $ref: "#/components/parameters/config-id"
      operationId: getConfigurationById
      responses:
        "200":
          description: Successfully returned configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Configuration"
        "400":
          description: Bad request
    put:
      tags:
        - Configuration
      summary: Updates a configuration
      description: Updates a configuration
      parameters:
        - $ref: "#/components/parameters/config-id"
      operationId: putConfigurationById
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Configuration"
      responses:
        "200":
          description: Successfully updated a configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Configuration"
    delete:
      tags:
        - Configuration
      summary: Deletes a configuration
      description: Removes information about the configuration with the given id
      parameters:
        - $ref: "#/components/parameters/config-id"
      operationId: deleteConfigurationById
      responses:
        "204":
          description: Successfully deleted configured configuration
        "400":
          description: Bad request

  /version:
    get:
      summary: Version of the API
      description: Gets information about the APIs version.
      operationId: getVersion
      tags:
        - Version
      responses:
        "200":
          description: Successfully returned the APIs version.
          content:
            application/json:
              schema:
                type: object

  /version/openapi.json:
    get:
      summary: OpenAPI specification for this API version
      description: Gets specification for this API version as an openapi.json file.
      operationId: getOpenAPI
      tags:
        - Version
      responses:
        "200":
          description: Successfully returned the openapi.json file.
          content:
            application/json:
              schema:
                type: object

  /dashboard-templates/{dashboard-template-name}:
    get:
      tags:
        - Customization
      summary: Get a full dashboard template
      description: Delivers a dashboard template which can assigned to users in Eliona
      externalDocs:
        description: The API to assign the dashboard to users in Eliona (see post /dashboards endpoint).
        url: https://github.com/eliona-smart-building-assistant/eliona-api
      operationId: getDashboardTemplateByName
      parameters:
        - name: dashboard-template-name
          in: path
          description: Name of the dashboard template
          required: true
          schema:
            type: string
            example: Microsoft 365
        - name: projectId
          in: query
          description: Define the project the dashboard should be
          required: true
          schema:
            type: string
            example: 99
      responses:
        "200":
          description: Successfully returned dashboard template
          content:
            application/json:
              schema:
                $ref: "https://raw.githubusercontent.com/eliona-smart-building-assistant/eliona-api/main/openapi.yaml#/components/schemas/Dashboard"
        "404":
          description: Template name not found

  /msproxy/{ms-graph-path}:
    get:
      tags:
        - Proxy
      summary: A proxy server that passes requests to the Microsoft Graph API
      parameters:
        - name: ms-graph-path
          in: path
          description: A path in MS Graph this request will be forwarded to.
          required: true
          schema:
            type: string
            example: rooms/me
        - name: eliona-project-id
          in: header
          description: The project from which the configurations should be used.
          required: false
          schema:
            type: string
            example: 99
      responses:
        "200":
          description: Successfully got
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProxyResponse"
    post:
      tags:
        - Proxy
      summary: A proxy server that passes requests to the Microsoft Graph API
      parameters:
        - name: ms-graph-path
          in: path
          description: A path in MS Graph this request will be forwarded to.
          required: true
          schema:
            type: string
            example: rooms/me
        - name: eliona-project-id
          in: header
          description: The project from which the configurations should be used.
          required: false
          schema:
            type: string
            example: 99
      responses:
        "200":
          description: Successfully posted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProxyResponse"
    put:
      tags:
        - Proxy
      summary: A proxy server that passes requests to the Microsoft Graph API
      parameters:
        - name: ms-graph-path
          in: path
          description: A path in MS Graph this request will be forwarded to.
          required: true
          schema:
            type: string
            example: rooms/me
        - name: eliona-project-id
          in: header
          description: The project from which the configurations should be used.
          required: false
          schema:
            type: string
            example: 99
      responses:
        "200":
          description: Successfully put
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProxyResponse"
    delete:
      tags:
        - Proxy
      summary: A proxy server that passes requests to the Microsoft Graph API
      parameters:
        - name: ms-graph-path
          in: path
          description: A path in MS Graph this request will be forwarded to.
          required: true
          schema:
            type: string
            example: rooms/me
        - name: eliona-project-id
          in: header
          description: The project from which the configurations should be used.
          required: false
          schema:
            type: string
            example: 99
      responses:
        "200":
          description: Successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProxyResponse"

components:
  parameters:
    config-id:
      name: config-id
      in: path
      description: The id of the config
      example: 4711
      required: true
      schema:
        type: integer
        format: int64
        example: 4711
  schemas:
    Configuration:
      type: object
      description: Each configuration defines access to Microsoft 365.
      properties:
        id:
          type: integer
          format: int64
          description: Internal identifier for the configured API (created automatically).
          readOnly: true
          nullable: true
        clientId:
          type: string
          description: Client ID
        clientSecret:
          type: string
          description: Client Secret
          nullable: true
        tenantId:
          type: string
          description: Tenant ID
        username:
          type: string
          description: Username
          nullable: true
        password:
          type: string
          description: Password
          nullable: true
        forEliona:
          type: boolean
          description: Indicates whether the config should be used for asset creation
          default: true
        forProxy:
          type: boolean
          description: Indicates whether the config should be used for app frontend and proxy
          default: true
        enable:
          type: boolean
          description: Flag to enable or disable fetching from this API
          default: true
          nullable: true
        refreshInterval:
          type: integer
          description: Interval in seconds for collecting data from API
          default: 60
        requestTimeout:
          type: integer
          description: Timeout in seconds
          default: 120
          nullable: true
        assetFilter:
          $ref: "#/components/schemas/AssetFilter"
          nullable: true
          example: [[{ "parameter": "Name", "regex": ".*Lobby.*" }]]
        active:
          type: boolean
          readOnly: true
          description: Set to `true` by the app when running and to `false` when app is stopped
          nullable: true
        projectIDs:
          type: array
          description: List of Eliona project ids for which this device should collect data. For each project id all smart devices are automatically created as an asset in Eliona. The mapping to Eliona assets is stored as an asset mapping in the Microsoft 365 app.
          nullable: true
          items:
            type: string
          example:
            - "42"
            - "99"

    AssetFilter:
      type: array
      description: Array of rules combined by logical OR
      items:
        type: array
        description: Array of rules combined by logical AND
        items:
          $ref: "#/components/schemas/FilterRule"

    FilterRule:
      type: object
      description: Asset selection rule. Possible parameters are defined in app's documentation.
      properties:
        parameter:
          type: string
          example: "name"
        regex:
          type: string
          example: "^Microsoft 365.*$"

    ProxyResponse:
      type: array
      items:
        type: object
        properties:
          config_id:
            type: integer
          username:
            type: string
          code:
            type: integer
          body:
            type: object
